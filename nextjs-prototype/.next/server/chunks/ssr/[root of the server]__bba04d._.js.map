{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/app/components/ride-card.tsx"],"sourcesContent":["import type { Ride } from '../types/main'\n\nexport default function RideCard(ride : Ride)\n{\n  const convertedMonth:number = (ride.dateTime.getMonth() + 1) % 13;\n\n  return (\n    <div className='rounded-lg border p-4 text-center'>\n      <h2>Route: {ride.beginning} - {ride.destination}</h2>\n      <p>Date: {convertedMonth}/{ride.dateTime.getDate()}/{ride.dateTime.getFullYear()}</p>\n      <p>Start time: {ride.dateTime.getHours()}:{ride.dateTime.getMinutes()}</p>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAEe,SAAS,SAAS,IAAW;IAE1C,MAAM,iBAAwB,CAAC,KAAK,QAAQ,CAAC,QAAQ,KAAK,CAAC,IAAI;IAE/D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;oBAAG;oBAAQ,KAAK,SAAS;oBAAC;oBAAI,KAAK,WAAW;;;;;;;0BAC/C,8OAAC;;oBAAE;oBAAO;oBAAe;oBAAE,KAAK,QAAQ,CAAC,OAAO;oBAAG;oBAAE,KAAK,QAAQ,CAAC,WAAW;;;;;;;0BAC9E,8OAAC;;oBAAE;oBAAa,KAAK,QAAQ,CAAC,QAAQ;oBAAG;oBAAE,KAAK,QAAQ,CAAC,UAAU;;;;;;;;;;;;;AAGzE"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/app/components/search-bar.tsx"],"sourcesContent":["export default function SearchBar()\n{\n  return (\n    <div className='text-center'>\n      <input className='border rounded-lg p-4 m-4 w-96 bg-black placeholder-white' type='text' placeholder='Search for a ride' />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS;IAEtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;YAA4D,MAAK;YAAO,aAAY;;;;;;;;;;;AAG3G"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/lib/db.tsx"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as { prisma: PrismaClient }\n\nexport const prisma =\n  globalForPrisma.prisma || new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n\n// This ensures that only one PrismaClient is instantiated during development\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG,OAEpE,6EAA6E"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/app/page.tsx"],"sourcesContent":["import RideCard from './components/ride-card';\nimport SearchBar from './components/search-bar';\nimport type { Ride } from './types/main';\nimport { prisma } from '../lib/db';\n\nexport default async function Home() {\n \n  const fetchedRides: Ride[] = await prisma.ride.findMany({\n    take: 4,\n  });\n\n  return (\n    <div>\n      <h1 className='text-4xl mt-4 text-center'>Yide Your Y(W)ay</h1>\n      <SearchBar />\n      <div className='grid grid-cols-1 gap-4 max-w-lg mx-auto'>\n        {fetchedRides.length > 0 ? (\n          fetchedRides.map((ride) => <RideCard key={ride.id} {...ride} />)\n        ) : (\n          <p className='text-center text-red-500'>No rides available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAEe,eAAe;IAE5B,MAAM,eAAuB,MAAM,0GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtD,MAAM;IACR;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA4B;;;;;;0BAC1C,8OAAC,mIAAA,CAAA,UAAS;;;;;0BACV,8OAAC;gBAAI,WAAU;0BACZ,aAAa,MAAM,GAAG,IACrB,aAAa,GAAG,CAAC,CAAC,qBAAS,8OAAC,kIAAA,CAAA,UAAQ;wBAAgB,GAAG,IAAI;uBAAjB,KAAK,EAAE;;;;8CAEjD,8OAAC;oBAAE,WAAU;8BAA2B;;;;;;;;;;;;;;;;;AAKlD"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkBA,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAWd,8BAA8B;IAI5BO,SAASC;;;;;;;;IACTC,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,iCAAoC;QAElD,YAAA;YAAA;YAAA,CACA,kCAD4D;YAC5D,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kBAChDY,QAAAA,CAAAA,CAAY;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACVC,MAAMZ,UAAUa,QAAQ;;SACxBC,MAAM;cACNC,IAAAA;YAAAA,IAAU,CAAA;YAAA;SAAA;cACV,OAAA;YAAA,IAAA,6BAA2C;YAAA;SAAA;cAC3CC,OAAAA;YAAAA,IAAY;YAAA;SAAA;cACZC,UAAU;YAAA,IAAA;YAAA;SAAA;;OACVC,UAAU,EAAE;IACd,EAAA,QAAA;IAAA;CAAA;;;IAGA,EAAA,uBAAA;AACF,GAAE,GAAA,0BAAA","ignoreList":[0]}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}