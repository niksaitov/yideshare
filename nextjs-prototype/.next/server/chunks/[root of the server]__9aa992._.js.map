{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/midhu1/Projects/yideshare/nextjs-prototype/app/api/auth/cas-validate/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { cookies } from \"next/headers\";\n\nexport async function GET(req: Request) {\n  try {\n    const baseUrl = process.env.NEXTAUTH_URL || \"http://localhost:3000\";\n    const { searchParams } = new URL(req.url);\n    const ticket = searchParams.get(\"ticket\");\n\n    if (!ticket) {\n      console.error(\"CAS Error: No ticket provided\");\n      return NextResponse.redirect(baseUrl); // Fix: Absolute URL\n    }\n\n    // Validate CAS ticket\n    const casValidateUrl = `https://secure.its.yale.edu/cas/serviceValidate?service=${encodeURIComponent(baseUrl + \"/api/auth/cas-validate\")}&ticket=${ticket}`;\n    \n    const response = await fetch(casValidateUrl);\n    if (!response.ok) {\n      console.error(\"CAS Request Failed:\", response.status, response.statusText);\n      return NextResponse.redirect(baseUrl);\n    }\n\n    const text = await response.text();\n    console.log(\"CAS Response:\", text); // Debug CAS response\n\n    // Extract NetID\n    const match = text.match(/<cas:user>(.*?)<\\/cas:user>/);\n    if (!match) {\n      console.error(\"CAS Validation Failed: No valid user found\");\n      return NextResponse.redirect(baseUrl);\n    }\n\n    const netID = match[1];\n    console.log(\"Authenticated User:\", netID);\n\n    // Fix: Use `NextResponse` for setting cookies\n    const res = NextResponse.redirect(`${baseUrl}/feed`);\n    res.cookies.set(\"session\", netID, { httpOnly: true, path: \"/\" });\n\n    return res;\n  } catch (error) {\n    console.error(\"Unexpected CAS Validation Error:\", error);\n    return NextResponse.redirect(process.env.NEXTAUTH_URL || \"http://localhost:3000\"); // Fix: Absolute URL\n  }\n}"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,MAAM,UAAU,QAAQ,GAAG,CAAC,YAAY,IAAI;QAC5C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,CAAC,QAAQ;YACX,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,UAAU,oBAAoB;QAC7D;QAEA,sBAAsB;QACtB,MAAM,iBAAiB,CAAC,wDAAwD,EAAE,mBAAmB,UAAU,0BAA0B,QAAQ,EAAE,QAAQ;QAE3J,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,uBAAuB,SAAS,MAAM,EAAE,SAAS,UAAU;YACzE,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,iBAAiB,OAAO,qBAAqB;QAEzD,gBAAgB;QAChB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO;YACV,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,MAAM,QAAQ,KAAK,CAAC,EAAE;QACtB,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,8CAA8C;QAC9C,MAAM,MAAM,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,GAAG,QAAQ,KAAK,CAAC;QACnD,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,OAAO;YAAE,UAAU;YAAM,MAAM;QAAI;QAE9D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,YAAY,IAAI,0BAA0B,oBAAoB;IACzG;AACF"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}