name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yideshare_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres -d yideshare_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yideshare_test
      DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yideshare_test
      NEXTAUTH_URL: http://localhost:3000
      NODE_ENV: test
      # If your server code requires this, provide a dummy or a secret:
      YALIES_API_KEY: ${{ secrets.YALIES_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install app deps
        run: npm ci

      - name: Install test deps
        run: npm ci
        working-directory: ./playwright-tests

      - name: Generate Prisma client and apply schema
        run: |
          npx prisma generate
          npx prisma db push

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./playwright-tests

      - name: Run Playwright tests
        run: npx playwright test
        working-directory: ./playwright-tests

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-tests/playwright-report/
          retention-days: 14
